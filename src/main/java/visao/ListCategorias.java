/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package visao;

import dao.CategoriaDAO;
import java.util.List;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;

import modelo.Categoria;

/**
 *
 * @author andrey
 */
public class ListCategorias extends javax.swing.JFrame {

    /**
     * Creates new form ListCategorias
     */
    public ListCategorias() {
        initComponents();
        atualizarTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCategorias = new javax.swing.JTable();
        jButtonEditarCategoria = new javax.swing.JButton();
        jButtonAdicionarCategoria = new javax.swing.JButton();
        jButtonExcluirCategoria = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableCategorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id", "nome", "tamanho", "embalagem"
            }
        ));
        jTableCategorias.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTableCategorias);
        jTableCategorias.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jButtonEditarCategoria.setText("editar");
        jButtonEditarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarCategoriaActionPerformed(evt);
            }
        });

        jButtonAdicionarCategoria.setText("adicionar");
        jButtonAdicionarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarCategoriaActionPerformed(evt);
            }
        });

        jButtonExcluirCategoria.setText("excluir");
        jButtonExcluirCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirCategoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jButtonEditarCategoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonExcluirCategoria)
                        .addGap(7, 7, 7)
                        .addComponent(jButtonAdicionarCategoria)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEditarCategoria)
                    .addComponent(jButtonAdicionarCategoria)
                    .addComponent(jButtonExcluirCategoria))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAdicionarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarCategoriaActionPerformed
         FormCategoria tela = new FormCategoria();

        // Adiciona listener para quando a janela for fechada
        tela.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                atualizarTabela(); // <- método que atualiza a tabela
            }
        });

        tela.setVisible(true);


    }//GEN-LAST:event_jButtonAdicionarCategoriaActionPerformed

    private void jButtonEditarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarCategoriaActionPerformed
    Categoria c = pegarLinhaSelecionada();
    
    if (c != null) {
        FormCategoria tela = new FormCategoria(c);

        // Adiciona listener para quando a janela for fechada
        tela.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                atualizarTabela(); // <- método que atualiza a tabela
            }
        });

        tela.setVisible(true);
    } else {
        JOptionPane.showMessageDialog(this, "Selecione uma categoria para editar.");
    }
        
    }//GEN-LAST:event_jButtonEditarCategoriaActionPerformed

    private void jButtonExcluirCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirCategoriaActionPerformed
        Categoria c = pegarLinhaSelecionada();
        if(c == null){return;}
        CategoriaDAO dao = new CategoriaDAO();
        dao.excluirCategoria(c.getId());
        atualizarTabela();
                
       
    }//GEN-LAST:event_jButtonExcluirCategoriaActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListCategorias.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListCategorias.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListCategorias.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListCategorias.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListCategorias().setVisible(true);
 
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdicionarCategoria;
    private javax.swing.JButton jButtonEditarCategoria;
    private javax.swing.JButton jButtonExcluirCategoria;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableCategorias;
    // End of variables declaration//GEN-END:variables

    private  void atualizarTabela() {

        DefaultTableModel modelo = (DefaultTableModel) jTableCategorias.getModel();
        modelo.setRowCount(0);

        CategoriaDAO dao = new CategoriaDAO();
        List<Categoria> lista = dao.listarCategorias();
        
        

        for (Categoria c : lista) {
            modelo.addRow(new Object[] { c.getId(), c.getNome(), c.getTamanho(), c.getEmbalagem() });
        }

    }
    
public Categoria pegarLinhaSelecionada(){
    int linhaSelecionada = jTableCategorias.getSelectedRow();

    if (linhaSelecionada != -1) {
        int id = (int) jTableCategorias.getValueAt(linhaSelecionada, 0);
        System.out.println("ID selecionado: " + id);
        CategoriaDAO dao = new CategoriaDAO();
        Categoria c = dao.buscarCategoriaPorID(id);
        return c;
        // ❌ Aqui falta o return c;
    } else {
        System.out.println("Nenhuma linha selecionada");
        return null; // ❌ Erro: não está retornando um objeto do tipo Categoria
    }
}

}
